// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectASP.Data;

namespace ProiectASP.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220105220320_CreareTabele")]
    partial class CreareTabele
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProiectASP.Entities.Adrese", b =>
                {
                    b.Property<int>("IdAdresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdAngajat")
                        .HasColumnType("int");

                    b.Property<string>("Oras")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Strada")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAdresa");

                    b.HasIndex("IdAngajat")
                        .IsUnique();

                    b.ToTable("Adrese");
                });

            modelBuilder.Entity("ProiectASP.Entities.Angajati", b =>
                {
                    b.Property<int>("IdAngajat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Salariu")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAngajat");

                    b.ToTable("Angajati");
                });

            modelBuilder.Entity("ProiectASP.Entities.Categorie", b =>
                {
                    b.Property<int>("IdCategorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdCategorie");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("ProiectASP.Entities.Clienti", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("ProiectASP.Entities.Comenzi", b =>
                {
                    b.Property<int>("IdComanda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientiIdClient")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("StatusTotal")
                        .HasColumnType("nvarchar(30)");

                    b.Property<float>("Valoare")
                        .HasColumnType("real");

                    b.HasKey("IdComanda");

                    b.HasIndex("ClientiIdClient");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("ProiectASP.Entities.DetaliiComanda", b =>
                {
                    b.Property<int>("IdComanda")
                        .HasColumnType("int");

                    b.Property<int>("IdProdus")
                        .HasColumnType("int");

                    b.Property<int>("IdExecutant")
                        .HasColumnType("int");

                    b.Property<int>("IdProiectant")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdComanda", "IdProdus");

                    b.HasIndex("IdProdus");

                    b.HasIndex("IdProiectant");

                    b.ToTable("DetaliiComanda");
                });

            modelBuilder.Entity("ProiectASP.Entities.Filament", b =>
                {
                    b.Property<int>("IdFilament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Gramaj")
                        .HasColumnType("real");

                    b.Property<float>("TemperaturaTopire")
                        .HasColumnType("real");

                    b.Property<string>("TipFilament")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFilament");

                    b.ToTable("Filament");
                });

            modelBuilder.Entity("ProiectASP.Entities.Imprimante", b =>
                {
                    b.Property<int>("IdImprimanta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("DimensiunePat")
                        .HasColumnType("real");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdImprimanta");

                    b.ToTable("Imprimante");
                });

            modelBuilder.Entity("ProiectASP.Entities.ImprimanteFilament", b =>
                {
                    b.Property<int>("IdFilament")
                        .HasColumnType("int");

                    b.Property<int>("IdImprimanta")
                        .HasColumnType("int");

                    b.HasKey("IdFilament", "IdImprimanta");

                    b.HasIndex("IdImprimanta");

                    b.ToTable("ImprimanteFilament");
                });

            modelBuilder.Entity("ProiectASP.Entities.Produse", b =>
                {
                    b.Property<int>("IdProdus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("CantitateFilament")
                        .HasColumnType("real");

                    b.Property<int?>("CategorieIdCategorie")
                        .HasColumnType("int");

                    b.Property<float>("CostProducere")
                        .HasColumnType("real");

                    b.Property<float>("Dimensiune")
                        .HasColumnType("real");

                    b.Property<int?>("FilamentIdFilament")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("PretVanzare")
                        .HasColumnType("real");

                    b.HasKey("IdProdus");

                    b.HasIndex("CategorieIdCategorie");

                    b.HasIndex("FilamentIdFilament");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("ProiectASP.Entities.Adrese", b =>
                {
                    b.HasOne("ProiectASP.Entities.Angajati", "Angajati")
                        .WithOne("Adrese")
                        .HasForeignKey("ProiectASP.Entities.Adrese", "IdAngajat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Angajati");
                });

            modelBuilder.Entity("ProiectASP.Entities.Comenzi", b =>
                {
                    b.HasOne("ProiectASP.Entities.Clienti", "Clienti")
                        .WithMany("Comenzi")
                        .HasForeignKey("ClientiIdClient");

                    b.Navigation("Clienti");
                });

            modelBuilder.Entity("ProiectASP.Entities.DetaliiComanda", b =>
                {
                    b.HasOne("ProiectASP.Entities.Comenzi", "Comenzi")
                        .WithMany("DetaliiComanda")
                        .HasForeignKey("IdComanda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectASP.Entities.Produse", "Produse")
                        .WithMany("DetaliiComanda")
                        .HasForeignKey("IdProdus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectASP.Entities.Angajati", "Angajati")
                        .WithMany("DetaliiComanda")
                        .HasForeignKey("IdProiectant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Angajati");

                    b.Navigation("Comenzi");

                    b.Navigation("Produse");
                });

            modelBuilder.Entity("ProiectASP.Entities.ImprimanteFilament", b =>
                {
                    b.HasOne("ProiectASP.Entities.Filament", "Filament")
                        .WithMany("ImprimanteFilamente")
                        .HasForeignKey("IdFilament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectASP.Entities.Imprimante", "Imprimante")
                        .WithMany("ImprimanteFilamente")
                        .HasForeignKey("IdImprimanta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filament");

                    b.Navigation("Imprimante");
                });

            modelBuilder.Entity("ProiectASP.Entities.Produse", b =>
                {
                    b.HasOne("ProiectASP.Entities.Categorie", "Categorie")
                        .WithMany("Produse")
                        .HasForeignKey("CategorieIdCategorie");

                    b.HasOne("ProiectASP.Entities.Filament", "Filament")
                        .WithMany("Produse")
                        .HasForeignKey("FilamentIdFilament");

                    b.Navigation("Categorie");

                    b.Navigation("Filament");
                });

            modelBuilder.Entity("ProiectASP.Entities.Angajati", b =>
                {
                    b.Navigation("Adrese");

                    b.Navigation("DetaliiComanda");
                });

            modelBuilder.Entity("ProiectASP.Entities.Categorie", b =>
                {
                    b.Navigation("Produse");
                });

            modelBuilder.Entity("ProiectASP.Entities.Clienti", b =>
                {
                    b.Navigation("Comenzi");
                });

            modelBuilder.Entity("ProiectASP.Entities.Comenzi", b =>
                {
                    b.Navigation("DetaliiComanda");
                });

            modelBuilder.Entity("ProiectASP.Entities.Filament", b =>
                {
                    b.Navigation("ImprimanteFilamente");

                    b.Navigation("Produse");
                });

            modelBuilder.Entity("ProiectASP.Entities.Imprimante", b =>
                {
                    b.Navigation("ImprimanteFilamente");
                });

            modelBuilder.Entity("ProiectASP.Entities.Produse", b =>
                {
                    b.Navigation("DetaliiComanda");
                });
#pragma warning restore 612, 618
        }
    }
}
